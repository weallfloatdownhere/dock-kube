- name: "Set global facts from provided triggers list."
  set_fact:
    mode_exec: '{{ "remove" if "remove" in triggers else "install" }}'
    verbose_exec: "{{ True if 'verbose' in triggers else False }}"
    workspace_directory: "{{ ansible_env.HOME | default('/root') }}/rke"

- name: "Generate hosts list from the provided config.yml file."
  add_host:
    hostname: '{{item.address|trim|ansible.netcommon.ipaddr}}'
    ansible_connection: ssh
    ansible_user: "{{cluster.user|trim}}"
    ansible_ssh_pass: "{{cluster.password|trim}}"
    ansible_become_pass: "{{cluster.password|trim}}"
    groups: lst_nodes
  with_items: "{{cluster.nodes|default([])}}"
  when: (step_tracker == "preflight")

- name: "Encrypt the admin password."
  encrypt_string:
    clear_string: "{{ cluster.addons.argocd.admin_password | default(argocd_default_admin_password) }}"
    encryption: "bcrypt"
  register: reg_encrypted_admin_password
  notify: export encrypted values
  when: (step_tracker == "kubernetes_addons_argocd")

- name: "Set ArgoCD variables."
  set_fact:
    argocd_cluster_url: "https://argocd-{{cluster.environment}}.{{cluster.domain}}"
    argocd_cluster_name: "argocd-{{cluster.environment}}.{{cluster.domain}}"
    encrypted_admin_password: "{{ reg_encrypted_admin_password.stdout | trim }}"
  notify: export encrypted values
  when: (step_tracker == "kubernetes_addons_argocd")

- name: "Generate cluster encrypted values."
  set_fact:
    encrypted_argocd_config: "{{ lookup('template', 'templates/argocd.cluster.config.json.j2') | to_json | b64encode }}"
    encrypted_argocd_name: "{{ argocd_cluster_name | b64encode }}"
    encrypted_argocd_server: "{{ argocd_cluster_url | b64encode }}"
  notify: export encrypted values
  when: (step_tracker == "kubernetes_addons_argocd")