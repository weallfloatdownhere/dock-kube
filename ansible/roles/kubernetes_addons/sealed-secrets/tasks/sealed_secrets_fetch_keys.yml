- name: Ensure the Sealed secrets output directory exists before exporting keys.
  file:
    path: "{{ workspace_directory }}/sealed_keys"
    state: directory

# Fetching sealed-secrets private / public keys.
# PRIVATE
- name: "Fetch Sealed secrets controller private key."
  environment:
    KUBECONFIG: "{{ workspace_directory }}/kube_config_cluster.yml"
  shell: |
    kubectl \
    --kubeconfig {{ workspace_directory }}/kube_config_cluster.yml get secret \ 
    --namespace {{ cluster.addons.sealed_secrets.namespace }} \
    -l sealedsecrets.bitnami.com/sealed-secrets-key -o yaml > {{ workspace_directory }}/sealed_keys/ss-private-key.yaml
  when: (step == "private")

# PUBLIC
- name: "Fetch Sealed secrets controller public key."
  environment:
    KUBECONFIG: "{{ workspace_directory }}/kube_config_cluster.yml"
  shell: |
    kubeseal \
    --kubeconfig {{ workspace_directory }}/kube_config_cluster.yml \
    --controller-name sealed-secrets \
    --controller-namespace {{ cluster.addons.sealed_secrets.namespace }} \
    --fetch-cert > {{ workspace_directory }}/sealed_keys/ss-public-key.pem
  when: (step == "public")

# Printing keys (if verbose)
- name: Read the generated Sealed secrets PRIVATE key (if verbose).
  debug:
    msg: "{{ lookup('file', workspace_directory + '/sealed_keys/ss-private-key.yaml') | from_yaml }}"
  when: (verbose_exec|default(False)|bool == True) and
        (step == "private")

# Printing keys (if verbose)
- name: Read the generated Sealed secrets PUBLIC key (if verbose).
  debug:
    msg: "{{ lookup('file', workspace_directory + '/sealed_keys/ss-public-key.pem') | from_yaml | indent( width=4, first=True) }}"
  when: (verbose_exec|default(False)|bool == True) and
        (step == "public")
