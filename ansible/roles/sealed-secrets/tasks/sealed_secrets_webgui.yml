- name: Confirm that the kubeconfig file is exists.
  stat:
    path: "{{ workspace_directory }}/kube_config_cluster.yml"
  register: kubeconfig_exists

- name: "Confirm that the Sealed secrets controller public key exists at : {{ workspace_directory }}/sealed_keys/ss-public-key.pem"
  stat:
    path: "{{ workspace_directory }}/sealed_keys/ss-public-key.pem"
  register: publickey_exists

- name: Fail if the kubeconfig doesnt exists since its a dependency.
  fail:
    msg: "Cant find the kubeconfig file."
  when: not kubeconfig_exists.stat.exists

- name: Fail if the Sealed secrets controller public key doesnt exists.
  fail:
    msg: "Cant find the Sealed secrets public key at : {{ workspace_directory }}/sealed_keys/ss-public-key.pem"
  when: not publickey_exists.stat.exists

- name: Add Sealed secrets WebGUI helm repository.
  kubernetes.core.helm_repository:
    name: kubesealwebgui
    repo_url: "{{ cluster.addons.sealed_secrets.webui.helm_charts_url }}"

- name: "Read the Sealed secrets public key."
  set_fact:
    ss_public_key: "{{ lookup('file', workspace_directory + '/sealed_keys/ss-public-key.pem') | indent( width=4, first=True) }}"

- name: "Print Sealed secrets installation infos (if verbose)."
  debug:
    msg: |+
      WebUI url: http://kubeseal-{{ cluster.environment }}.{{ cluster.domain }}
      ------------------------------
      KUBESEAL CONTROLLER PUBLIC KEY
      {{ ss_public_key }}
  when: (verbose_exec | default(False))

- name: "Deploy Sealed secrets WebGUI into the cluster."
  register: reg_kubeseal_webui_install
  kubernetes.core.helm:
    atomic: True
    name: kubesealwebgui
    chart_ref: kubesealwebgui/kubeseal-webgui
    kubeconfig: "{{ workspace_directory }}/kube_config_cluster.yml"
    create_namespace: True
    release_namespace: "{{ cluster.addons.sealed_secrets.namespace }}"
    release_state: present
    values:
      namespace: "{{ cluster.addons.sealed_secrets.namespace }}"
      replicaCount: 1
      annotations: {}

      api:
        environment: {}
        url: 'http://kubeseal-{{ cluster.environment }}.{{ cluster.domain }}'

        image:
          repository: kubesealwebgui/api
          tag: "latest"

      ui:
        image:
          repository: kubesealwebgui/ui
          tag: "latest"
  
      image:
        pullPolicy: Always

      serviceaccount:
        create: true

      sealedSecrets:
        autoFetchCert: true
        controllerName: sealed-secrets-controller
        controllerNamespace: "{{ cluster.addons.sealed_secrets.namespace }}"

- name: "Print the output of the Kubeseal WebUI helm deployment."
  debug:
    msg: "{{ reg_kubeseal_webui_install }}"
  when: (verbose_exec | default(False))